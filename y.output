Terminals unused in grammar

    START
    END
    ELSE
    ELSEIF
    STRCPY
    STRLEN
    STRCMP


State 83 conflicts: 1 shift/reduce


Grammar

    0 $accept: start_program $end

    1 start_program: declaration_section main_section

    2 declaration_section: declaration_section declaration_content
    3                    | declaration_content

    4 declaration_content: function_declaration
    5                    | object_declaration

    6 object_declaration: ID CLASS OPEN_CURLY_BRACKET object_content CLOSE_CURLY_BRACKET
    7                   | ID CLASS OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET

    8 object_content: object_content inside_object
    9               | inside_object

   10 inside_object: function_declaration
   11              | create_variable

   12 function_declaration: OPEN_ROUND_BRACKET list_param CLOSE_ROUND_BRACKET ID available_types OPEN_CURLY_BRACKET function_content CLOSE_CURLY_BRACKET
   13                     | OPEN_ROUND_BRACKET list_param CLOSE_ROUND_BRACKET ID available_types OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET

   14 list_param: list_param ',' ID available_types
   15           | ID available_types

   16 function_content: function_content instructions
   17                 | instructions

   18 multiple_instructions: multiple_instructions instructions
   19                      | instructions

   20 instructions: if_instr
   21             | while_instr
   22             | for_instr
   23             | assign_instr
   24             | create_variable
   25             | function_call

   26 function_call: ';' OPEN_ROUND_BRACKET list_call CLOSE_ROUND_BRACKET ID
   27              | ';' OPEN_ROUND_BRACKET CLOSE_ROUND_BRACKET ID

   28 list_call: expression ',' list_call
   29          | expression

   30 if_instr: OPEN_ROUND_BRACKET expression CLOSE_ROUND_BRACKET IF OPEN_CURLY_BRACKET multiple_instructions CLOSE_CURLY_BRACKET
   31         | OPEN_ROUND_BRACKET expression CLOSE_ROUND_BRACKET IF OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET

   32 while_instr: OPEN_ROUND_BRACKET expression CLOSE_ROUND_BRACKET WHILE OPEN_CURLY_BRACKET multiple_instructions CLOSE_CURLY_BRACKET
   33            | OPEN_ROUND_BRACKET expression CLOSE_ROUND_BRACKET WHILE OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET

   34 assign_instr: ';' expression ASSIGN ID

   35 for_instr: OPEN_ROUND_BRACKET assign_instr ';' expression ';' expression CLOSE_ROUND_BRACKET FOR OPEN_CURLY_BRACKET multiple_instructions CLOSE_CURLY_BRACKET
   36          | OPEN_ROUND_BRACKET assign_instr ';' expression ';' expression CLOSE_ROUND_BRACKET FOR OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET
   37          | OPEN_ROUND_BRACKET CLOSE_ROUND_BRACKET FOR OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET

   38 create_variable: ID available_types

   39 available_types: INT
   40                | CHAR
   41                | FLOAT
   42                | BOOL
   43                | ID

   44 expression: NR
   45           | OPEN_ROUND_BRACKET expression CLOSE_ROUND_BRACKET
   46           | expression ADD expression
   47           | expression MUL expression
   48           | expression DIV expression
   49           | expression MIN expression
   50           | expression BIGGER expression
   51           | expression SMALLER expression
   52           | expression EQUAL expression
   53           | ID INCR

   54 main_section: OPEN_ROUND_BRACKET CLOSE_ROUND_BRACKET MAIN INT OPEN_CURLY_BRACKET multiple_instructions CLOSE_CURLY_BRACKET
   55             | OPEN_ROUND_BRACKET CLOSE_ROUND_BRACKET MAIN INT OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET


Terminals, with rules where they appear

    $end (0) 0
    ',' (44) 14 28
    ';' (59) 26 27 34 35 36
    error (256)
    START (258)
    END (259)
    INT (260) 39 54 55
    CHAR (261) 40
    FLOAT (262) 41
    ASSIGN (263) 34
    BOOL (264) 42
    IF (265) 30 31
    ELSE (266)
    ELSEIF (267)
    WHILE (268) 32 33
    FOR (269) 35 36 37
    STRCPY (270)
    STRLEN (271)
    STRCMP (272)
    ID (273) 6 7 12 13 14 15 26 27 34 38 43 53
    NR (274) 44
    ADD (275) 46
    DIV (276) 48
    BIGGER (277) 50
    SMALLER (278) 51
    MIN (279) 49
    MUL (280) 47
    EQUAL (281) 52
    OPEN_ROUND_BRACKET (282) 12 13 26 27 30 31 32 33 35 36 37 45 54 55
    CLOSE_ROUND_BRACKET (283) 12 13 26 27 30 31 32 33 35 36 37 45 54 55
    CLOSE_CURLY_BRACKET (284) 6 7 12 13 30 31 32 33 35 36 37 54 55
    OPEN_CURLY_BRACKET (285) 6 7 12 13 30 31 32 33 35 36 37 54 55
    INCR (286) 53
    CLASS (287) 6 7
    MAIN (288) 54 55


Nonterminals, with rules where they appear

    $accept (36)
        on left: 0
    start_program (37)
        on left: 1
        on right: 0
    declaration_section (38)
        on left: 2 3
        on right: 1 2
    declaration_content (39)
        on left: 4 5
        on right: 2 3
    object_declaration (40)
        on left: 6 7
        on right: 5
    object_content (41)
        on left: 8 9
        on right: 6 8
    inside_object (42)
        on left: 10 11
        on right: 8 9
    function_declaration (43)
        on left: 12 13
        on right: 4 10
    list_param (44)
        on left: 14 15
        on right: 12 13 14
    function_content (45)
        on left: 16 17
        on right: 12 16
    multiple_instructions (46)
        on left: 18 19
        on right: 18 30 32 35 54
    instructions (47)
        on left: 20 21 22 23 24 25
        on right: 16 17 18 19
    function_call (48)
        on left: 26 27
        on right: 25
    list_call (49)
        on left: 28 29
        on right: 26 28
    if_instr (50)
        on left: 30 31
        on right: 20
    while_instr (51)
        on left: 32 33
        on right: 21
    assign_instr (52)
        on left: 34
        on right: 23 35 36
    for_instr (53)
        on left: 35 36 37
        on right: 22
    create_variable (54)
        on left: 38
        on right: 11 24
    available_types (55)
        on left: 39 40 41 42 43
        on right: 12 13 14 15 38
    expression (56)
        on left: 44 45 46 47 48 49 50 51 52 53
        on right: 28 29 30 31 32 33 34 35 36 45 46 47 48 49 50 51 52
    main_section (57)
        on left: 54 55
        on right: 1


State 0

    0 $accept: . start_program $end

    ID                  shift, and go to state 1
    OPEN_ROUND_BRACKET  shift, and go to state 2

    start_program         go to state 3
    declaration_section   go to state 4
    declaration_content   go to state 5
    object_declaration    go to state 6
    function_declaration  go to state 7


State 1

    6 object_declaration: ID . CLASS OPEN_CURLY_BRACKET object_content CLOSE_CURLY_BRACKET
    7                   | ID . CLASS OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET

    CLASS  shift, and go to state 8


State 2

   12 function_declaration: OPEN_ROUND_BRACKET . list_param CLOSE_ROUND_BRACKET ID available_types OPEN_CURLY_BRACKET function_content CLOSE_CURLY_BRACKET
   13                     | OPEN_ROUND_BRACKET . list_param CLOSE_ROUND_BRACKET ID available_types OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET

    ID  shift, and go to state 9

    list_param  go to state 10


State 3

    0 $accept: start_program . $end

    $end  shift, and go to state 11


State 4

    1 start_program: declaration_section . main_section
    2 declaration_section: declaration_section . declaration_content

    ID                  shift, and go to state 1
    OPEN_ROUND_BRACKET  shift, and go to state 12

    declaration_content   go to state 13
    object_declaration    go to state 6
    function_declaration  go to state 7
    main_section          go to state 14


State 5

    3 declaration_section: declaration_content .

    $default  reduce using rule 3 (declaration_section)


State 6

    5 declaration_content: object_declaration .

    $default  reduce using rule 5 (declaration_content)


State 7

    4 declaration_content: function_declaration .

    $default  reduce using rule 4 (declaration_content)


State 8

    6 object_declaration: ID CLASS . OPEN_CURLY_BRACKET object_content CLOSE_CURLY_BRACKET
    7                   | ID CLASS . OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET

    OPEN_CURLY_BRACKET  shift, and go to state 15


State 9

   15 list_param: ID . available_types

    INT    shift, and go to state 16
    CHAR   shift, and go to state 17
    FLOAT  shift, and go to state 18
    BOOL   shift, and go to state 19
    ID     shift, and go to state 20

    available_types  go to state 21


State 10

   12 function_declaration: OPEN_ROUND_BRACKET list_param . CLOSE_ROUND_BRACKET ID available_types OPEN_CURLY_BRACKET function_content CLOSE_CURLY_BRACKET
   13                     | OPEN_ROUND_BRACKET list_param . CLOSE_ROUND_BRACKET ID available_types OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET
   14 list_param: list_param . ',' ID available_types

    CLOSE_ROUND_BRACKET  shift, and go to state 22
    ','                  shift, and go to state 23


State 11

    0 $accept: start_program $end .

    $default  accept


State 12

   12 function_declaration: OPEN_ROUND_BRACKET . list_param CLOSE_ROUND_BRACKET ID available_types OPEN_CURLY_BRACKET function_content CLOSE_CURLY_BRACKET
   13                     | OPEN_ROUND_BRACKET . list_param CLOSE_ROUND_BRACKET ID available_types OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET
   54 main_section: OPEN_ROUND_BRACKET . CLOSE_ROUND_BRACKET MAIN INT OPEN_CURLY_BRACKET multiple_instructions CLOSE_CURLY_BRACKET
   55             | OPEN_ROUND_BRACKET . CLOSE_ROUND_BRACKET MAIN INT OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET

    ID                   shift, and go to state 9
    CLOSE_ROUND_BRACKET  shift, and go to state 24

    list_param  go to state 10


State 13

    2 declaration_section: declaration_section declaration_content .

    $default  reduce using rule 2 (declaration_section)


State 14

    1 start_program: declaration_section main_section .

    $default  reduce using rule 1 (start_program)


State 15

    6 object_declaration: ID CLASS OPEN_CURLY_BRACKET . object_content CLOSE_CURLY_BRACKET
    7                   | ID CLASS OPEN_CURLY_BRACKET . CLOSE_CURLY_BRACKET

    ID                   shift, and go to state 25
    OPEN_ROUND_BRACKET   shift, and go to state 2
    CLOSE_CURLY_BRACKET  shift, and go to state 26

    object_content        go to state 27
    inside_object         go to state 28
    function_declaration  go to state 29
    create_variable       go to state 30


State 16

   39 available_types: INT .

    $default  reduce using rule 39 (available_types)


State 17

   40 available_types: CHAR .

    $default  reduce using rule 40 (available_types)


State 18

   41 available_types: FLOAT .

    $default  reduce using rule 41 (available_types)


State 19

   42 available_types: BOOL .

    $default  reduce using rule 42 (available_types)


State 20

   43 available_types: ID .

    $default  reduce using rule 43 (available_types)


State 21

   15 list_param: ID available_types .

    $default  reduce using rule 15 (list_param)


State 22

   12 function_declaration: OPEN_ROUND_BRACKET list_param CLOSE_ROUND_BRACKET . ID available_types OPEN_CURLY_BRACKET function_content CLOSE_CURLY_BRACKET
   13                     | OPEN_ROUND_BRACKET list_param CLOSE_ROUND_BRACKET . ID available_types OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET

    ID  shift, and go to state 31


State 23

   14 list_param: list_param ',' . ID available_types

    ID  shift, and go to state 32


State 24

   54 main_section: OPEN_ROUND_BRACKET CLOSE_ROUND_BRACKET . MAIN INT OPEN_CURLY_BRACKET multiple_instructions CLOSE_CURLY_BRACKET
   55             | OPEN_ROUND_BRACKET CLOSE_ROUND_BRACKET . MAIN INT OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET

    MAIN  shift, and go to state 33


State 25

   38 create_variable: ID . available_types

    INT    shift, and go to state 16
    CHAR   shift, and go to state 17
    FLOAT  shift, and go to state 18
    BOOL   shift, and go to state 19
    ID     shift, and go to state 20

    available_types  go to state 34


State 26

    7 object_declaration: ID CLASS OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET .

    $default  reduce using rule 7 (object_declaration)


State 27

    6 object_declaration: ID CLASS OPEN_CURLY_BRACKET object_content . CLOSE_CURLY_BRACKET
    8 object_content: object_content . inside_object

    ID                   shift, and go to state 25
    OPEN_ROUND_BRACKET   shift, and go to state 2
    CLOSE_CURLY_BRACKET  shift, and go to state 35

    inside_object         go to state 36
    function_declaration  go to state 29
    create_variable       go to state 30


State 28

    9 object_content: inside_object .

    $default  reduce using rule 9 (object_content)


State 29

   10 inside_object: function_declaration .

    $default  reduce using rule 10 (inside_object)


State 30

   11 inside_object: create_variable .

    $default  reduce using rule 11 (inside_object)


State 31

   12 function_declaration: OPEN_ROUND_BRACKET list_param CLOSE_ROUND_BRACKET ID . available_types OPEN_CURLY_BRACKET function_content CLOSE_CURLY_BRACKET
   13                     | OPEN_ROUND_BRACKET list_param CLOSE_ROUND_BRACKET ID . available_types OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET

    INT    shift, and go to state 16
    CHAR   shift, and go to state 17
    FLOAT  shift, and go to state 18
    BOOL   shift, and go to state 19
    ID     shift, and go to state 20

    available_types  go to state 37


State 32

   14 list_param: list_param ',' ID . available_types

    INT    shift, and go to state 16
    CHAR   shift, and go to state 17
    FLOAT  shift, and go to state 18
    BOOL   shift, and go to state 19
    ID     shift, and go to state 20

    available_types  go to state 38


State 33

   54 main_section: OPEN_ROUND_BRACKET CLOSE_ROUND_BRACKET MAIN . INT OPEN_CURLY_BRACKET multiple_instructions CLOSE_CURLY_BRACKET
   55             | OPEN_ROUND_BRACKET CLOSE_ROUND_BRACKET MAIN . INT OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET

    INT  shift, and go to state 39


State 34

   38 create_variable: ID available_types .

    $default  reduce using rule 38 (create_variable)


State 35

    6 object_declaration: ID CLASS OPEN_CURLY_BRACKET object_content CLOSE_CURLY_BRACKET .

    $default  reduce using rule 6 (object_declaration)


State 36

    8 object_content: object_content inside_object .

    $default  reduce using rule 8 (object_content)


State 37

   12 function_declaration: OPEN_ROUND_BRACKET list_param CLOSE_ROUND_BRACKET ID available_types . OPEN_CURLY_BRACKET function_content CLOSE_CURLY_BRACKET
   13                     | OPEN_ROUND_BRACKET list_param CLOSE_ROUND_BRACKET ID available_types . OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET

    OPEN_CURLY_BRACKET  shift, and go to state 40


State 38

   14 list_param: list_param ',' ID available_types .

    $default  reduce using rule 14 (list_param)


State 39

   54 main_section: OPEN_ROUND_BRACKET CLOSE_ROUND_BRACKET MAIN INT . OPEN_CURLY_BRACKET multiple_instructions CLOSE_CURLY_BRACKET
   55             | OPEN_ROUND_BRACKET CLOSE_ROUND_BRACKET MAIN INT . OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET

    OPEN_CURLY_BRACKET  shift, and go to state 41


State 40

   12 function_declaration: OPEN_ROUND_BRACKET list_param CLOSE_ROUND_BRACKET ID available_types OPEN_CURLY_BRACKET . function_content CLOSE_CURLY_BRACKET
   13                     | OPEN_ROUND_BRACKET list_param CLOSE_ROUND_BRACKET ID available_types OPEN_CURLY_BRACKET . CLOSE_CURLY_BRACKET

    ID                   shift, and go to state 25
    OPEN_ROUND_BRACKET   shift, and go to state 42
    CLOSE_CURLY_BRACKET  shift, and go to state 43
    ';'                  shift, and go to state 44

    function_content  go to state 45
    instructions      go to state 46
    function_call     go to state 47
    if_instr          go to state 48
    while_instr       go to state 49
    assign_instr      go to state 50
    for_instr         go to state 51
    create_variable   go to state 52


State 41

   54 main_section: OPEN_ROUND_BRACKET CLOSE_ROUND_BRACKET MAIN INT OPEN_CURLY_BRACKET . multiple_instructions CLOSE_CURLY_BRACKET
   55             | OPEN_ROUND_BRACKET CLOSE_ROUND_BRACKET MAIN INT OPEN_CURLY_BRACKET . CLOSE_CURLY_BRACKET

    ID                   shift, and go to state 25
    OPEN_ROUND_BRACKET   shift, and go to state 42
    CLOSE_CURLY_BRACKET  shift, and go to state 53
    ';'                  shift, and go to state 44

    multiple_instructions  go to state 54
    instructions           go to state 55
    function_call          go to state 47
    if_instr               go to state 48
    while_instr            go to state 49
    assign_instr           go to state 50
    for_instr              go to state 51
    create_variable        go to state 52


State 42

   30 if_instr: OPEN_ROUND_BRACKET . expression CLOSE_ROUND_BRACKET IF OPEN_CURLY_BRACKET multiple_instructions CLOSE_CURLY_BRACKET
   31         | OPEN_ROUND_BRACKET . expression CLOSE_ROUND_BRACKET IF OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET
   32 while_instr: OPEN_ROUND_BRACKET . expression CLOSE_ROUND_BRACKET WHILE OPEN_CURLY_BRACKET multiple_instructions CLOSE_CURLY_BRACKET
   33            | OPEN_ROUND_BRACKET . expression CLOSE_ROUND_BRACKET WHILE OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET
   35 for_instr: OPEN_ROUND_BRACKET . assign_instr ';' expression ';' expression CLOSE_ROUND_BRACKET FOR OPEN_CURLY_BRACKET multiple_instructions CLOSE_CURLY_BRACKET
   36          | OPEN_ROUND_BRACKET . assign_instr ';' expression ';' expression CLOSE_ROUND_BRACKET FOR OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET
   37          | OPEN_ROUND_BRACKET . CLOSE_ROUND_BRACKET FOR OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET

    ID                   shift, and go to state 56
    NR                   shift, and go to state 57
    OPEN_ROUND_BRACKET   shift, and go to state 58
    CLOSE_ROUND_BRACKET  shift, and go to state 59
    ';'                  shift, and go to state 60

    assign_instr  go to state 61
    expression    go to state 62


State 43

   13 function_declaration: OPEN_ROUND_BRACKET list_param CLOSE_ROUND_BRACKET ID available_types OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET .

    $default  reduce using rule 13 (function_declaration)


State 44

   26 function_call: ';' . OPEN_ROUND_BRACKET list_call CLOSE_ROUND_BRACKET ID
   27              | ';' . OPEN_ROUND_BRACKET CLOSE_ROUND_BRACKET ID
   34 assign_instr: ';' . expression ASSIGN ID

    ID                  shift, and go to state 56
    NR                  shift, and go to state 57
    OPEN_ROUND_BRACKET  shift, and go to state 63

    expression  go to state 64


State 45

   12 function_declaration: OPEN_ROUND_BRACKET list_param CLOSE_ROUND_BRACKET ID available_types OPEN_CURLY_BRACKET function_content . CLOSE_CURLY_BRACKET
   16 function_content: function_content . instructions

    ID                   shift, and go to state 25
    OPEN_ROUND_BRACKET   shift, and go to state 42
    CLOSE_CURLY_BRACKET  shift, and go to state 65
    ';'                  shift, and go to state 44

    instructions     go to state 66
    function_call    go to state 47
    if_instr         go to state 48
    while_instr      go to state 49
    assign_instr     go to state 50
    for_instr        go to state 51
    create_variable  go to state 52


State 46

   17 function_content: instructions .

    $default  reduce using rule 17 (function_content)


State 47

   25 instructions: function_call .

    $default  reduce using rule 25 (instructions)


State 48

   20 instructions: if_instr .

    $default  reduce using rule 20 (instructions)


State 49

   21 instructions: while_instr .

    $default  reduce using rule 21 (instructions)


State 50

   23 instructions: assign_instr .

    $default  reduce using rule 23 (instructions)


State 51

   22 instructions: for_instr .

    $default  reduce using rule 22 (instructions)


State 52

   24 instructions: create_variable .

    $default  reduce using rule 24 (instructions)


State 53

   55 main_section: OPEN_ROUND_BRACKET CLOSE_ROUND_BRACKET MAIN INT OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET .

    $default  reduce using rule 55 (main_section)


State 54

   18 multiple_instructions: multiple_instructions . instructions
   54 main_section: OPEN_ROUND_BRACKET CLOSE_ROUND_BRACKET MAIN INT OPEN_CURLY_BRACKET multiple_instructions . CLOSE_CURLY_BRACKET

    ID                   shift, and go to state 25
    OPEN_ROUND_BRACKET   shift, and go to state 42
    CLOSE_CURLY_BRACKET  shift, and go to state 67
    ';'                  shift, and go to state 44

    instructions     go to state 68
    function_call    go to state 47
    if_instr         go to state 48
    while_instr      go to state 49
    assign_instr     go to state 50
    for_instr        go to state 51
    create_variable  go to state 52


State 55

   19 multiple_instructions: instructions .

    $default  reduce using rule 19 (multiple_instructions)


State 56

   53 expression: ID . INCR

    INCR  shift, and go to state 69


State 57

   44 expression: NR .

    $default  reduce using rule 44 (expression)


State 58

   45 expression: OPEN_ROUND_BRACKET . expression CLOSE_ROUND_BRACKET

    ID                  shift, and go to state 56
    NR                  shift, and go to state 57
    OPEN_ROUND_BRACKET  shift, and go to state 58

    expression  go to state 70


State 59

   37 for_instr: OPEN_ROUND_BRACKET CLOSE_ROUND_BRACKET . FOR OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET

    FOR  shift, and go to state 71


State 60

   34 assign_instr: ';' . expression ASSIGN ID

    ID                  shift, and go to state 56
    NR                  shift, and go to state 57
    OPEN_ROUND_BRACKET  shift, and go to state 58

    expression  go to state 64


State 61

   35 for_instr: OPEN_ROUND_BRACKET assign_instr . ';' expression ';' expression CLOSE_ROUND_BRACKET FOR OPEN_CURLY_BRACKET multiple_instructions CLOSE_CURLY_BRACKET
   36          | OPEN_ROUND_BRACKET assign_instr . ';' expression ';' expression CLOSE_ROUND_BRACKET FOR OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET

    ';'  shift, and go to state 72


State 62

   30 if_instr: OPEN_ROUND_BRACKET expression . CLOSE_ROUND_BRACKET IF OPEN_CURLY_BRACKET multiple_instructions CLOSE_CURLY_BRACKET
   31         | OPEN_ROUND_BRACKET expression . CLOSE_ROUND_BRACKET IF OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET
   32 while_instr: OPEN_ROUND_BRACKET expression . CLOSE_ROUND_BRACKET WHILE OPEN_CURLY_BRACKET multiple_instructions CLOSE_CURLY_BRACKET
   33            | OPEN_ROUND_BRACKET expression . CLOSE_ROUND_BRACKET WHILE OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET
   46 expression: expression . ADD expression
   47           | expression . MUL expression
   48           | expression . DIV expression
   49           | expression . MIN expression
   50           | expression . BIGGER expression
   51           | expression . SMALLER expression
   52           | expression . EQUAL expression

    ADD                  shift, and go to state 73
    DIV                  shift, and go to state 74
    BIGGER               shift, and go to state 75
    SMALLER              shift, and go to state 76
    MIN                  shift, and go to state 77
    MUL                  shift, and go to state 78
    EQUAL                shift, and go to state 79
    CLOSE_ROUND_BRACKET  shift, and go to state 80


State 63

   26 function_call: ';' OPEN_ROUND_BRACKET . list_call CLOSE_ROUND_BRACKET ID
   27              | ';' OPEN_ROUND_BRACKET . CLOSE_ROUND_BRACKET ID
   45 expression: OPEN_ROUND_BRACKET . expression CLOSE_ROUND_BRACKET

    ID                   shift, and go to state 56
    NR                   shift, and go to state 57
    OPEN_ROUND_BRACKET   shift, and go to state 58
    CLOSE_ROUND_BRACKET  shift, and go to state 81

    list_call   go to state 82
    expression  go to state 83


State 64

   34 assign_instr: ';' expression . ASSIGN ID
   46 expression: expression . ADD expression
   47           | expression . MUL expression
   48           | expression . DIV expression
   49           | expression . MIN expression
   50           | expression . BIGGER expression
   51           | expression . SMALLER expression
   52           | expression . EQUAL expression

    ASSIGN   shift, and go to state 84
    ADD      shift, and go to state 73
    DIV      shift, and go to state 74
    BIGGER   shift, and go to state 75
    SMALLER  shift, and go to state 76
    MIN      shift, and go to state 77
    MUL      shift, and go to state 78
    EQUAL    shift, and go to state 79


State 65

   12 function_declaration: OPEN_ROUND_BRACKET list_param CLOSE_ROUND_BRACKET ID available_types OPEN_CURLY_BRACKET function_content CLOSE_CURLY_BRACKET .

    $default  reduce using rule 12 (function_declaration)


State 66

   16 function_content: function_content instructions .

    $default  reduce using rule 16 (function_content)


State 67

   54 main_section: OPEN_ROUND_BRACKET CLOSE_ROUND_BRACKET MAIN INT OPEN_CURLY_BRACKET multiple_instructions CLOSE_CURLY_BRACKET .

    $default  reduce using rule 54 (main_section)


State 68

   18 multiple_instructions: multiple_instructions instructions .

    $default  reduce using rule 18 (multiple_instructions)


State 69

   53 expression: ID INCR .

    $default  reduce using rule 53 (expression)


State 70

   45 expression: OPEN_ROUND_BRACKET expression . CLOSE_ROUND_BRACKET
   46           | expression . ADD expression
   47           | expression . MUL expression
   48           | expression . DIV expression
   49           | expression . MIN expression
   50           | expression . BIGGER expression
   51           | expression . SMALLER expression
   52           | expression . EQUAL expression

    ADD                  shift, and go to state 73
    DIV                  shift, and go to state 74
    BIGGER               shift, and go to state 75
    SMALLER              shift, and go to state 76
    MIN                  shift, and go to state 77
    MUL                  shift, and go to state 78
    EQUAL                shift, and go to state 79
    CLOSE_ROUND_BRACKET  shift, and go to state 85


State 71

   37 for_instr: OPEN_ROUND_BRACKET CLOSE_ROUND_BRACKET FOR . OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET

    OPEN_CURLY_BRACKET  shift, and go to state 86


State 72

   35 for_instr: OPEN_ROUND_BRACKET assign_instr ';' . expression ';' expression CLOSE_ROUND_BRACKET FOR OPEN_CURLY_BRACKET multiple_instructions CLOSE_CURLY_BRACKET
   36          | OPEN_ROUND_BRACKET assign_instr ';' . expression ';' expression CLOSE_ROUND_BRACKET FOR OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET

    ID                  shift, and go to state 56
    NR                  shift, and go to state 57
    OPEN_ROUND_BRACKET  shift, and go to state 58

    expression  go to state 87


State 73

   46 expression: expression ADD . expression

    ID                  shift, and go to state 56
    NR                  shift, and go to state 57
    OPEN_ROUND_BRACKET  shift, and go to state 58

    expression  go to state 88


State 74

   48 expression: expression DIV . expression

    ID                  shift, and go to state 56
    NR                  shift, and go to state 57
    OPEN_ROUND_BRACKET  shift, and go to state 58

    expression  go to state 89


State 75

   50 expression: expression BIGGER . expression

    ID                  shift, and go to state 56
    NR                  shift, and go to state 57
    OPEN_ROUND_BRACKET  shift, and go to state 58

    expression  go to state 90


State 76

   51 expression: expression SMALLER . expression

    ID                  shift, and go to state 56
    NR                  shift, and go to state 57
    OPEN_ROUND_BRACKET  shift, and go to state 58

    expression  go to state 91


State 77

   49 expression: expression MIN . expression

    ID                  shift, and go to state 56
    NR                  shift, and go to state 57
    OPEN_ROUND_BRACKET  shift, and go to state 58

    expression  go to state 92


State 78

   47 expression: expression MUL . expression

    ID                  shift, and go to state 56
    NR                  shift, and go to state 57
    OPEN_ROUND_BRACKET  shift, and go to state 58

    expression  go to state 93


State 79

   52 expression: expression EQUAL . expression

    ID                  shift, and go to state 56
    NR                  shift, and go to state 57
    OPEN_ROUND_BRACKET  shift, and go to state 58

    expression  go to state 94


State 80

   30 if_instr: OPEN_ROUND_BRACKET expression CLOSE_ROUND_BRACKET . IF OPEN_CURLY_BRACKET multiple_instructions CLOSE_CURLY_BRACKET
   31         | OPEN_ROUND_BRACKET expression CLOSE_ROUND_BRACKET . IF OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET
   32 while_instr: OPEN_ROUND_BRACKET expression CLOSE_ROUND_BRACKET . WHILE OPEN_CURLY_BRACKET multiple_instructions CLOSE_CURLY_BRACKET
   33            | OPEN_ROUND_BRACKET expression CLOSE_ROUND_BRACKET . WHILE OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET

    IF     shift, and go to state 95
    WHILE  shift, and go to state 96


State 81

   27 function_call: ';' OPEN_ROUND_BRACKET CLOSE_ROUND_BRACKET . ID

    ID  shift, and go to state 97


State 82

   26 function_call: ';' OPEN_ROUND_BRACKET list_call . CLOSE_ROUND_BRACKET ID

    CLOSE_ROUND_BRACKET  shift, and go to state 98


State 83

   28 list_call: expression . ',' list_call
   29          | expression .
   45 expression: OPEN_ROUND_BRACKET expression . CLOSE_ROUND_BRACKET
   46           | expression . ADD expression
   47           | expression . MUL expression
   48           | expression . DIV expression
   49           | expression . MIN expression
   50           | expression . BIGGER expression
   51           | expression . SMALLER expression
   52           | expression . EQUAL expression

    ADD                  shift, and go to state 73
    DIV                  shift, and go to state 74
    BIGGER               shift, and go to state 75
    SMALLER              shift, and go to state 76
    MIN                  shift, and go to state 77
    MUL                  shift, and go to state 78
    EQUAL                shift, and go to state 79
    CLOSE_ROUND_BRACKET  shift, and go to state 85
    ','                  shift, and go to state 99

    CLOSE_ROUND_BRACKET  [reduce using rule 29 (list_call)]


State 84

   34 assign_instr: ';' expression ASSIGN . ID

    ID  shift, and go to state 100


State 85

   45 expression: OPEN_ROUND_BRACKET expression CLOSE_ROUND_BRACKET .

    $default  reduce using rule 45 (expression)


State 86

   37 for_instr: OPEN_ROUND_BRACKET CLOSE_ROUND_BRACKET FOR OPEN_CURLY_BRACKET . CLOSE_CURLY_BRACKET

    CLOSE_CURLY_BRACKET  shift, and go to state 101


State 87

   35 for_instr: OPEN_ROUND_BRACKET assign_instr ';' expression . ';' expression CLOSE_ROUND_BRACKET FOR OPEN_CURLY_BRACKET multiple_instructions CLOSE_CURLY_BRACKET
   36          | OPEN_ROUND_BRACKET assign_instr ';' expression . ';' expression CLOSE_ROUND_BRACKET FOR OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET
   46 expression: expression . ADD expression
   47           | expression . MUL expression
   48           | expression . DIV expression
   49           | expression . MIN expression
   50           | expression . BIGGER expression
   51           | expression . SMALLER expression
   52           | expression . EQUAL expression

    ADD      shift, and go to state 73
    DIV      shift, and go to state 74
    BIGGER   shift, and go to state 75
    SMALLER  shift, and go to state 76
    MIN      shift, and go to state 77
    MUL      shift, and go to state 78
    EQUAL    shift, and go to state 79
    ';'      shift, and go to state 102


State 88

   46 expression: expression . ADD expression
   46           | expression ADD expression .
   47           | expression . MUL expression
   48           | expression . DIV expression
   49           | expression . MIN expression
   50           | expression . BIGGER expression
   51           | expression . SMALLER expression
   52           | expression . EQUAL expression

    DIV      shift, and go to state 74
    BIGGER   shift, and go to state 75
    SMALLER  shift, and go to state 76
    MIN      shift, and go to state 77
    MUL      shift, and go to state 78
    EQUAL    shift, and go to state 79

    $default  reduce using rule 46 (expression)


State 89

   46 expression: expression . ADD expression
   47           | expression . MUL expression
   48           | expression . DIV expression
   48           | expression DIV expression .
   49           | expression . MIN expression
   50           | expression . BIGGER expression
   51           | expression . SMALLER expression
   52           | expression . EQUAL expression

    BIGGER   shift, and go to state 75
    SMALLER  shift, and go to state 76
    EQUAL    shift, and go to state 79

    $default  reduce using rule 48 (expression)


State 90

   46 expression: expression . ADD expression
   47           | expression . MUL expression
   48           | expression . DIV expression
   49           | expression . MIN expression
   50           | expression . BIGGER expression
   50           | expression BIGGER expression .
   51           | expression . SMALLER expression
   52           | expression . EQUAL expression

    EQUAL  shift, and go to state 79

    $default  reduce using rule 50 (expression)


State 91

   46 expression: expression . ADD expression
   47           | expression . MUL expression
   48           | expression . DIV expression
   49           | expression . MIN expression
   50           | expression . BIGGER expression
   51           | expression . SMALLER expression
   51           | expression SMALLER expression .
   52           | expression . EQUAL expression

    BIGGER  shift, and go to state 75
    EQUAL   shift, and go to state 79

    $default  reduce using rule 51 (expression)


State 92

   46 expression: expression . ADD expression
   47           | expression . MUL expression
   48           | expression . DIV expression
   49           | expression . MIN expression
   49           | expression MIN expression .
   50           | expression . BIGGER expression
   51           | expression . SMALLER expression
   52           | expression . EQUAL expression

    DIV      shift, and go to state 74
    BIGGER   shift, and go to state 75
    SMALLER  shift, and go to state 76
    MUL      shift, and go to state 78
    EQUAL    shift, and go to state 79

    $default  reduce using rule 49 (expression)


State 93

   46 expression: expression . ADD expression
   47           | expression . MUL expression
   47           | expression MUL expression .
   48           | expression . DIV expression
   49           | expression . MIN expression
   50           | expression . BIGGER expression
   51           | expression . SMALLER expression
   52           | expression . EQUAL expression

    DIV      shift, and go to state 74
    BIGGER   shift, and go to state 75
    SMALLER  shift, and go to state 76
    EQUAL    shift, and go to state 79

    $default  reduce using rule 47 (expression)


State 94

   46 expression: expression . ADD expression
   47           | expression . MUL expression
   48           | expression . DIV expression
   49           | expression . MIN expression
   50           | expression . BIGGER expression
   51           | expression . SMALLER expression
   52           | expression . EQUAL expression
   52           | expression EQUAL expression .

    $default  reduce using rule 52 (expression)


State 95

   30 if_instr: OPEN_ROUND_BRACKET expression CLOSE_ROUND_BRACKET IF . OPEN_CURLY_BRACKET multiple_instructions CLOSE_CURLY_BRACKET
   31         | OPEN_ROUND_BRACKET expression CLOSE_ROUND_BRACKET IF . OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET

    OPEN_CURLY_BRACKET  shift, and go to state 103


State 96

   32 while_instr: OPEN_ROUND_BRACKET expression CLOSE_ROUND_BRACKET WHILE . OPEN_CURLY_BRACKET multiple_instructions CLOSE_CURLY_BRACKET
   33            | OPEN_ROUND_BRACKET expression CLOSE_ROUND_BRACKET WHILE . OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET

    OPEN_CURLY_BRACKET  shift, and go to state 104


State 97

   27 function_call: ';' OPEN_ROUND_BRACKET CLOSE_ROUND_BRACKET ID .

    $default  reduce using rule 27 (function_call)


State 98

   26 function_call: ';' OPEN_ROUND_BRACKET list_call CLOSE_ROUND_BRACKET . ID

    ID  shift, and go to state 105


State 99

   28 list_call: expression ',' . list_call

    ID                  shift, and go to state 56
    NR                  shift, and go to state 57
    OPEN_ROUND_BRACKET  shift, and go to state 58

    list_call   go to state 106
    expression  go to state 107


State 100

   34 assign_instr: ';' expression ASSIGN ID .

    $default  reduce using rule 34 (assign_instr)


State 101

   37 for_instr: OPEN_ROUND_BRACKET CLOSE_ROUND_BRACKET FOR OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET .

    $default  reduce using rule 37 (for_instr)


State 102

   35 for_instr: OPEN_ROUND_BRACKET assign_instr ';' expression ';' . expression CLOSE_ROUND_BRACKET FOR OPEN_CURLY_BRACKET multiple_instructions CLOSE_CURLY_BRACKET
   36          | OPEN_ROUND_BRACKET assign_instr ';' expression ';' . expression CLOSE_ROUND_BRACKET FOR OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET

    ID                  shift, and go to state 56
    NR                  shift, and go to state 57
    OPEN_ROUND_BRACKET  shift, and go to state 58

    expression  go to state 108


State 103

   30 if_instr: OPEN_ROUND_BRACKET expression CLOSE_ROUND_BRACKET IF OPEN_CURLY_BRACKET . multiple_instructions CLOSE_CURLY_BRACKET
   31         | OPEN_ROUND_BRACKET expression CLOSE_ROUND_BRACKET IF OPEN_CURLY_BRACKET . CLOSE_CURLY_BRACKET

    ID                   shift, and go to state 25
    OPEN_ROUND_BRACKET   shift, and go to state 42
    CLOSE_CURLY_BRACKET  shift, and go to state 109
    ';'                  shift, and go to state 44

    multiple_instructions  go to state 110
    instructions           go to state 55
    function_call          go to state 47
    if_instr               go to state 48
    while_instr            go to state 49
    assign_instr           go to state 50
    for_instr              go to state 51
    create_variable        go to state 52


State 104

   32 while_instr: OPEN_ROUND_BRACKET expression CLOSE_ROUND_BRACKET WHILE OPEN_CURLY_BRACKET . multiple_instructions CLOSE_CURLY_BRACKET
   33            | OPEN_ROUND_BRACKET expression CLOSE_ROUND_BRACKET WHILE OPEN_CURLY_BRACKET . CLOSE_CURLY_BRACKET

    ID                   shift, and go to state 25
    OPEN_ROUND_BRACKET   shift, and go to state 42
    CLOSE_CURLY_BRACKET  shift, and go to state 111
    ';'                  shift, and go to state 44

    multiple_instructions  go to state 112
    instructions           go to state 55
    function_call          go to state 47
    if_instr               go to state 48
    while_instr            go to state 49
    assign_instr           go to state 50
    for_instr              go to state 51
    create_variable        go to state 52


State 105

   26 function_call: ';' OPEN_ROUND_BRACKET list_call CLOSE_ROUND_BRACKET ID .

    $default  reduce using rule 26 (function_call)


State 106

   28 list_call: expression ',' list_call .

    $default  reduce using rule 28 (list_call)


State 107

   28 list_call: expression . ',' list_call
   29          | expression .
   46 expression: expression . ADD expression
   47           | expression . MUL expression
   48           | expression . DIV expression
   49           | expression . MIN expression
   50           | expression . BIGGER expression
   51           | expression . SMALLER expression
   52           | expression . EQUAL expression

    ADD      shift, and go to state 73
    DIV      shift, and go to state 74
    BIGGER   shift, and go to state 75
    SMALLER  shift, and go to state 76
    MIN      shift, and go to state 77
    MUL      shift, and go to state 78
    EQUAL    shift, and go to state 79
    ','      shift, and go to state 99

    $default  reduce using rule 29 (list_call)


State 108

   35 for_instr: OPEN_ROUND_BRACKET assign_instr ';' expression ';' expression . CLOSE_ROUND_BRACKET FOR OPEN_CURLY_BRACKET multiple_instructions CLOSE_CURLY_BRACKET
   36          | OPEN_ROUND_BRACKET assign_instr ';' expression ';' expression . CLOSE_ROUND_BRACKET FOR OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET
   46 expression: expression . ADD expression
   47           | expression . MUL expression
   48           | expression . DIV expression
   49           | expression . MIN expression
   50           | expression . BIGGER expression
   51           | expression . SMALLER expression
   52           | expression . EQUAL expression

    ADD                  shift, and go to state 73
    DIV                  shift, and go to state 74
    BIGGER               shift, and go to state 75
    SMALLER              shift, and go to state 76
    MIN                  shift, and go to state 77
    MUL                  shift, and go to state 78
    EQUAL                shift, and go to state 79
    CLOSE_ROUND_BRACKET  shift, and go to state 113


State 109

   31 if_instr: OPEN_ROUND_BRACKET expression CLOSE_ROUND_BRACKET IF OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET .

    $default  reduce using rule 31 (if_instr)


State 110

   18 multiple_instructions: multiple_instructions . instructions
   30 if_instr: OPEN_ROUND_BRACKET expression CLOSE_ROUND_BRACKET IF OPEN_CURLY_BRACKET multiple_instructions . CLOSE_CURLY_BRACKET

    ID                   shift, and go to state 25
    OPEN_ROUND_BRACKET   shift, and go to state 42
    CLOSE_CURLY_BRACKET  shift, and go to state 114
    ';'                  shift, and go to state 44

    instructions     go to state 68
    function_call    go to state 47
    if_instr         go to state 48
    while_instr      go to state 49
    assign_instr     go to state 50
    for_instr        go to state 51
    create_variable  go to state 52


State 111

   33 while_instr: OPEN_ROUND_BRACKET expression CLOSE_ROUND_BRACKET WHILE OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET .

    $default  reduce using rule 33 (while_instr)


State 112

   18 multiple_instructions: multiple_instructions . instructions
   32 while_instr: OPEN_ROUND_BRACKET expression CLOSE_ROUND_BRACKET WHILE OPEN_CURLY_BRACKET multiple_instructions . CLOSE_CURLY_BRACKET

    ID                   shift, and go to state 25
    OPEN_ROUND_BRACKET   shift, and go to state 42
    CLOSE_CURLY_BRACKET  shift, and go to state 115
    ';'                  shift, and go to state 44

    instructions     go to state 68
    function_call    go to state 47
    if_instr         go to state 48
    while_instr      go to state 49
    assign_instr     go to state 50
    for_instr        go to state 51
    create_variable  go to state 52


State 113

   35 for_instr: OPEN_ROUND_BRACKET assign_instr ';' expression ';' expression CLOSE_ROUND_BRACKET . FOR OPEN_CURLY_BRACKET multiple_instructions CLOSE_CURLY_BRACKET
   36          | OPEN_ROUND_BRACKET assign_instr ';' expression ';' expression CLOSE_ROUND_BRACKET . FOR OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET

    FOR  shift, and go to state 116


State 114

   30 if_instr: OPEN_ROUND_BRACKET expression CLOSE_ROUND_BRACKET IF OPEN_CURLY_BRACKET multiple_instructions CLOSE_CURLY_BRACKET .

    $default  reduce using rule 30 (if_instr)


State 115

   32 while_instr: OPEN_ROUND_BRACKET expression CLOSE_ROUND_BRACKET WHILE OPEN_CURLY_BRACKET multiple_instructions CLOSE_CURLY_BRACKET .

    $default  reduce using rule 32 (while_instr)


State 116

   35 for_instr: OPEN_ROUND_BRACKET assign_instr ';' expression ';' expression CLOSE_ROUND_BRACKET FOR . OPEN_CURLY_BRACKET multiple_instructions CLOSE_CURLY_BRACKET
   36          | OPEN_ROUND_BRACKET assign_instr ';' expression ';' expression CLOSE_ROUND_BRACKET FOR . OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET

    OPEN_CURLY_BRACKET  shift, and go to state 117


State 117

   35 for_instr: OPEN_ROUND_BRACKET assign_instr ';' expression ';' expression CLOSE_ROUND_BRACKET FOR OPEN_CURLY_BRACKET . multiple_instructions CLOSE_CURLY_BRACKET
   36          | OPEN_ROUND_BRACKET assign_instr ';' expression ';' expression CLOSE_ROUND_BRACKET FOR OPEN_CURLY_BRACKET . CLOSE_CURLY_BRACKET

    ID                   shift, and go to state 25
    OPEN_ROUND_BRACKET   shift, and go to state 42
    CLOSE_CURLY_BRACKET  shift, and go to state 118
    ';'                  shift, and go to state 44

    multiple_instructions  go to state 119
    instructions           go to state 55
    function_call          go to state 47
    if_instr               go to state 48
    while_instr            go to state 49
    assign_instr           go to state 50
    for_instr              go to state 51
    create_variable        go to state 52


State 118

   36 for_instr: OPEN_ROUND_BRACKET assign_instr ';' expression ';' expression CLOSE_ROUND_BRACKET FOR OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET .

    $default  reduce using rule 36 (for_instr)


State 119

   18 multiple_instructions: multiple_instructions . instructions
   35 for_instr: OPEN_ROUND_BRACKET assign_instr ';' expression ';' expression CLOSE_ROUND_BRACKET FOR OPEN_CURLY_BRACKET multiple_instructions . CLOSE_CURLY_BRACKET

    ID                   shift, and go to state 25
    OPEN_ROUND_BRACKET   shift, and go to state 42
    CLOSE_CURLY_BRACKET  shift, and go to state 120
    ';'                  shift, and go to state 44

    instructions     go to state 68
    function_call    go to state 47
    if_instr         go to state 48
    while_instr      go to state 49
    assign_instr     go to state 50
    for_instr        go to state 51
    create_variable  go to state 52


State 120

   35 for_instr: OPEN_ROUND_BRACKET assign_instr ';' expression ';' expression CLOSE_ROUND_BRACKET FOR OPEN_CURLY_BRACKET multiple_instructions CLOSE_CURLY_BRACKET .

    $default  reduce using rule 35 (for_instr)
